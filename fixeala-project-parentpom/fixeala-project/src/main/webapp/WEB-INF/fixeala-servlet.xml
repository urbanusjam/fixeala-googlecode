<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:p="http://www.springframework.org/schema/p" 
	xmlns:util="http://www.springframework.org/schema/util" 
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd ">
        
    <!-- support JSR303 annotation if JSR 303 validation present on classpath -->
	<mvc:annotation-driven ignoreDefaultModelOnRedirect="true" />
	
 	<mvc:resources mapping="/resources/**" location="/resources/" /> 	
 
	<!-- Controllers -->	
	<context:component-scan base-package="ar.com.urbanusjam.web" />
	
	<!-- Context -->	
	<import resource="classpath:ctx/fixeala-context.xml" />

	<util:properties id="propertyConfigurer" location="classpath:/properties/fixeala.build.properties"/>
	<context:property-placeholder properties-ref="propertyConfigurer" />
	
	<!-- Content Negotiation Views -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />		
<!-- 		<property name="ignoreAcceptHeader" value="true" /> -->
<!-- 	<property name="defaultContentType" value="text/html" /> -->		
		<property name="mediaTypes">
			<map>
			   <entry key="json" value="application/json" />
			   <entry key="xml" value="application/xml" />			 
			</map>
		</property> 	  	
	  	<property name="defaultViews">
	  		<list>
	  			<!-- JSON View -->
				<bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView">
					<property name="objectMapper" ref="jacksonObjectMapper" />
				</bean> 
				
			  	<!-- JAXB XML View -->
			  	<bean class="org.springframework.web.servlet.view.xml.MarshallingView">
			  		<property name="marshaller" ref="jaxb2Marshaller" />
			  	</bean>
			</list>
	  	</property>
	  	<property name="viewResolvers">
			<list>	
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />	  		
			  	<!-- JSP View Resolver -->	
				<bean id="viewResolver" 
					class="org.springframework.web.servlet.view.InternalResourceViewResolver">
				    <property name="prefix" value="/pages/" />
				    <property name="suffix" value=".jsp" />	
				    <property name="exposedContextBeanNames">
				        <list><value>properties</value></list>
				    </property>			
				    <property name="order"  value="2"/>					  				       
				</bean>
		 	</list>
	  	</property>	 	  
	</bean>
		
	<!-- Jackson Mapper -->
	<bean id="jacksonMessageConverter" class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
		 <property name="objectMapper" ref="jacksonObjectMapper" />
	</bean>
	
	<bean id="jacksonObjectMapper" class="org.codehaus.jackson.map.ObjectMapper" />

	<bean id="marshallingHttpMessageConverter" class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
        <property name="marshaller" ref="jaxb2Marshaller"></property>
        <property name="unmarshaller" ref="jaxb2Marshaller"></property>
    </bean>
    
    <bean id="jaxb2Marshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">                        
         <property name="classesToBeBound">
             <list>
             	<value>ar.com.urbanusjam.web.domain.api.ReclamoResponse</value>
             	<value>ar.com.urbanusjam.web.domain.api.ReclamoListaResponse</value>
             	<value>ar.com.urbanusjam.web.domain.api.DataResponse</value>
             </list>
         </property>
     </bean>
    
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			  <list>
			  	 <ref bean="jacksonMessageConverter"/>
			     <ref bean="marshallingHttpMessageConverter"/>			    
			  </list>
		</property>
	</bean>	
	
	<!-- Configure the multipart resolver -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
        p:maxUploadSize="3000000"/> <!-- the maximum file size in bytes (3MB) -->
	

	<!-- Default Tiles View Resolver -->	
 	<bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver" >
   		<property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/> 
 	 <property name="order" value="0" />
 	</bean> 

 	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" >
   		<property name="definitions">
	    	<list>
	        	<value>/WEB-INF/tiles.xml</value>
	     	</list>
   		</property>
 	</bean>
 	
	<!-- Application Message Bundle -->
	<bean id="messageSource" class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
		<property name="basename" value="/messages/fixeala.messages" />		
	</bean>
	
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
      
</beans>